@using ERecruitment.Common
@using ERecruitment.Models.Enums
@model ERecruitment.Models.Questions.QuestionModel
@{
    FormMode mode = ViewBag.FormMode;
    int testId = ViewBag.TestId ?? 0;
    var name = mode == FormMode.Create ? " Add " : " Edit ";
    ViewBag.Title =  name + " Question ";
}

<section class="content">
    <div class="row">
        <div class="col-md-8 col-sm-10 col-sm-offset-1 col-md-offset-2">
            <div class="box">
                <header>
                    <h2>@ViewBag.Title</h2>
                </header>

                @using (Html.BeginForm("Add", "Question", new { mode }, FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary("", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(a => a.Body, new { @class = "content-label" })
                        @Html.TextAreaFor(a => a.Body, new { @class = "form-control" })
                        @Html.ValidationMessageFor(a => a.Body)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(a => a.QuestionType, new { @class = "content-label" })
                        @Html.EnumDropDownListFor(a => a.QuestionType,
                            new { @class = "form-control" })
                        @Html.ValidationMessageFor(a => a.QuestionType)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(a => a.Score, new { @class = "content-label" })
                        @Html.TextBoxFor(a => a.Score, new { @class = "form-control" })
                        @Html.ValidationMessageFor(a => a.Score)
                    </div>

                    if (testId > 0)
                    {
                        <input type="hidden" name="TestId" value="@testId" />
                    }
                    else
                    {
                        var tests = SiteHelper.GetTestListItems();
                        <div class="form-group">
                            @Html.LabelFor(a => a.TestId, new { @class = "content-label" })
                            @Html.DropDownListFor(a => a.TestId, tests,
                                new { @class = "form-control" })
                            @Html.ValidationMessageFor(a => a.TestId)
                        </div>
                    }


                    <div class="form-group">
                        <input type="submit" value="Add" class="btn btn-primary"/>
                    </div>


                }
            </div>
        </div>
    </div>
</section>



